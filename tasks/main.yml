- name: Set a hostname
  ansible.builtin.hostname:
    name: microshift.digitalis.host

- name: Install Yum repo
  get_url:
    url: https://copr.fedorainfracloud.org/coprs/g/redhat-et/microshift/repo/fedora-35/group_redhat-et-microshift-fedora-35.repo
    dest: /etc/yum.repos.d/microshift-nightly-fedora35.repo

- name: Dependencies and tools
  package:
    name:
      - bash-completion
      - vim
      - python3-pip
    state: present

- name: Python kubernetes module
  pip:
    name: kubernetes
    state: present

- name: Install CRI module
  block:
    - name: Enable CRI module
      copy:
        content: |
          [cri-o]
          name=cri-o
          stream=1.22
          profiles=
          state=enabled
        dest: /etc/dnf/modules.d/cri-o.module

    - name: Install CRI package
      ansible.builtin.dnf:
        name: cri-o
        state: present

    - name: Configure CRI
      copy:
        dest: /etc/cni/net.d/100-crio-bridge.conf
        content: |
          {
              "cniVersion": "0.4.0",
              "name": "crio",
              "type": "bridge",
              "bridge": "cni0",
              "isGateway": true,
              "ipMasq": true,
              "hairpinMode": true,
              "ipam": {
                  "type": "host-local",
                  "routes": [
                      { "dst": "0.0.0.0/0" }
                  ],
                  "ranges": [
                      [{ "subnet": "10.42.0.0/24" }]
                  ]
              }
          }

- name: Install microshift
  ansible.builtin.dnf:
    name: microshift
    state: present

- include_role:
    name: gantsign.helm

- name: Install kubectl
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/v1.26.1/bin/linux/amd64/kubectl
    dest: /usr/local/bin/kubectl
    mode: 0755

- name: Install ODO client
  get_url:
    url: https://developers.redhat.com/content-gateway/rest/mirror/pub/openshift-v4/clients/odo/latest/odo-linux-amd64
    dest: /usr/local/bin/odo
    mode: 0755

- name: Start crio
  ansible.builtin.systemd:
    name: crio
    state: started
    enabled: true

- name: Start microshift
  ansible.builtin.systemd:
    name: microshift
    state: started
    enabled: true

- meta: flush_handlers

- name: Set up user profile
  block:
    - name: Bash completion
      ansible.builtin.shell: "kubectl completion bash > /etc/bash_completion.d/kubectl"
      args:
        creates: /etc/bash_completion.d/kubectl
        executable: /bin/bash

    - name: Set up profile
      copy:
        dest: /etc/profile.d/microshift.sh
        mode: 0755
        content: |
          #!/bin/sh
          export KUBECONFIG={{ kubeconfig }}
          alias k=kubectl
          complete -o default -F __start_kubectl k

- name: Wait for port microshift to start
  ansible.builtin.wait_for:
    port: 6443
    delay: 60

- name: Wait for kubeconfig file
  shell: ls -lrt {{ kubeconfig }}
  register: lsresult
  until: "lsresult is not failed"
  retries: 100
  delay: 1

- name: Confirm k8s is running
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    label_selectors:
      - "dns.operator.openshift.io/daemonset-dns=default"
    namespace: openshift-dns
    wait_sleep: 1
    wait_timeout: 360

- import_tasks: dns.yml
  tags: dns

- import_tasks: metallb.yml
  tags: metallb

- import_tasks: console.yml
  tags: console

- import_tasks: helm.yml
  tags: helm

- import_tasks: argocd.yml
  tags: argocd

- import_tasks: argocd_apps.yml
  tags: argocd_apps